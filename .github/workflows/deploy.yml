name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, gd, curl, zip, bcmath, redis
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install PHP Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Install Node.js Dependencies
      run: npm ci

    - name: Generate key
      run: php artisan key:generate --ansi --no-interaction

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Tests
      run: |
        php artisan config:clear
        php artisan test --without-tty

    - name: Build Assets
      run: npm run build

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          cd /var/www/wall-planner
          
          # Put app in maintenance mode
          sudo -u www-data php artisan down
          
          # Pull latest changes
          sudo -u www-data git pull origin main
          
          # Install dependencies
          sudo -u www-data composer install --no-dev --optimize-autoloader --no-interaction
          sudo -u www-data npm ci
          
          # Build assets
          sudo -u www-data npm run build
          
          # Run migrations
          sudo -u www-data php artisan migrate --force
          
          # Clear and cache
          sudo -u www-data php artisan config:clear
          sudo -u www-data php artisan route:clear
          sudo -u www-data php artisan view:clear
          sudo -u www-data php artisan cache:clear
          
          sudo -u www-data php artisan config:cache
          sudo -u www-data php artisan route:cache
          sudo -u www-data php artisan view:cache
          
          # Restart services
          sudo systemctl reload php8.2-fpm
          sudo supervisorctl restart wall-planner-worker:* || true
          
          # Bring app back online
          sudo -u www-data php artisan up
          
          echo "ðŸŽ‰ Deployment completed successfully!"